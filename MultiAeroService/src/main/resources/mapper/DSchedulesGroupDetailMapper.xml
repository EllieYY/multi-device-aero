<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wim.aero.acs.db.mapper.DSchedulesGroupDetailMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wim.aero.acs.db.entity.DSchedulesGroupDetail">
        <result column="schedules_group_id" property="schedulesGroupId" />
        <result column="schedules_id" property="schedulesId" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        schedules_group_id, schedules_id, status, remark
    </sql>



    <!--自定义结果集-->
    <resultMap id="TimeZoneMap" type="com.wim.aero.acs.protocol.timezone.TimeZone">
        <result column="groupId" property="number" />
        <result column="scpId" property="nScpId" />
        <collection property="intervals"  ofType="com.wim.aero.acs.protocol.timezone.TimeInterval">
            <result column="startTime" property="start" />
            <result column="endTime" property="end" />
            <result column="daymask" property="dayMask" />
        </collection>
    </resultMap>

    <select id="selectByScpId" resultMap="TimeZoneMap">
        select
            controller_id as scpId,
            a.schedules_group_id as groupId,
            b.schedules_id as timeId,
            datediff( minute , '12:00AM', c.begin_time ) as startTime,
            datediff( minute , '12:00AM', c.end_time ) as endTime,
            (1 * ISNULL(c.sun_flag, 0) +
             2 * ISNULL(c.mon_flag, 0) +
             4 * ISNULL(c.tues_flag, 0) +
             8 * ISNULL(c.wed_flag, 0) +
             16 * ISNULL(c.thu_flag, 0) +
             32 * ISNULL(c.fri_flag, 0) +
             64 * ISNULL(c.sat_flag, 0) +
             256 * ISNULL(c.holiday_type_1, 0) +
             512 * ISNULL(c.holiday_type_2, 0)) AS daymask
        from d_access_level_door a, d_schedules_group_detail b
        LEFT JOIN d_schedules c
        ON b.schedules_id = c.schedules_id
        where controller_id = #{scpId}
            and a.schedules_group_id = b.schedules_group_id
            and c.status = '1'
        order by c.schedules_id
    </select>

    <select id="selectByScpIdForEle" resultMap="TimeZoneMap">
        select
            controller_id as scpId,
            b.schedules_group_id as groupId,
            b.schedules_id as timeId,
            datediff( minute , '12:00AM', c.begin_time ) as startTime,
            datediff( minute , '12:00AM', c.end_time ) as endTime,
            (1 * ISNULL(c.sun_flag, 0) +
             2 * ISNULL(c.mon_flag, 0) +
             4 * ISNULL(c.tues_flag, 0) +
             8 * ISNULL(c.wed_flag, 0) +
             16 * ISNULL(c.thu_flag, 0) +
             32 * ISNULL(c.fri_flag, 0) +
             64 * ISNULL(c.sat_flag, 0) +
             256 * ISNULL(c.holiday_type_1, 0) +
             512 * ISNULL(c.holiday_type_2, 0)) AS daymask
        from ele_access_level_detail a, ele_level_detail d, d_schedules_group_detail b
        left join d_schedules c on b.schedules_id = c.schedules_id
        where controller_id = #{scpId}
          and a.ele_level_id = d.ele_level_id
          and d.schedules_group_id = b.schedules_group_id
          and c.status = '1'
        order by c.schedules_id
    </select>

    <select id="selectAllForScp" resultMap="TimeZoneMap">
        select
            #{scpId} as scpId,
            b.schedules_group_id as groupId,
            b.schedules_id as timeId,
            datediff( minute , '12:00AM', c.begin_time ) as startTime,
            datediff( minute , '12:00AM', c.end_time ) as endTime,
            (1 * ISNULL(c.sun_flag, 0) +
             2 * ISNULL(c.mon_flag, 0) +
             4 * ISNULL(c.tues_flag, 0) +
             8 * ISNULL(c.wed_flag, 0) +
             16 * ISNULL(c.thu_flag, 0) +
             32 * ISNULL(c.fri_flag, 0) +
             64 * ISNULL(c.sat_flag, 0) +
             256 * ISNULL(c.holiday_type_1, 0) +
             512 * ISNULL(c.holiday_type_2, 0)) AS daymask
        from d_schedules_group_detail b
        left join d_schedules c on b.schedules_id = c.schedules_id
        where b.status = '0'
        order by c.schedules_id
    </select>

</mapper>
